# Generated by Django 4.1.7 on 2023-03-25 21:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('url', models.URLField(blank=True)),
                ('host', models.URLField(blank=True)),
                ('displayName', models.CharField(max_length=150)),
                ('github', models.URLField(blank=True)),
                ('profileImage', models.URLField(blank=True)),
                ('user', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(default='', max_length=255)),
                ('items', models.JSONField(default=list)),
            ],
            options={
                'verbose_name_plural': "inbox's",
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('url', models.URLField(default='')),
                ('title', models.CharField(max_length=255)),
                ('source', models.URLField(max_length=255, null=True)),
                ('origin', models.URLField(max_length=255, null=True)),
                ('description', models.TextField(default='', max_length=255)),
                ('contentType', models.CharField(choices=[('text/plain', 'Plain'), ('text/markdown', 'Markdown'), ('image/png;base64', 'Png'), ('image/jpeg;base64', 'Jpeg'), ('application/base64', 'Application')], default='text/plain', max_length=20)),
                ('content', models.TextField(blank=True)),
                ('categories', models.JSONField(default=list, null=True)),
                ('count', models.IntegerField(blank=True, default=0)),
                ('numLikes', models.IntegerField(blank=True, default=0)),
                ('comments', models.URLField(max_length=255, null=True)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('visibility', models.CharField(choices=[('PRIVATE', 'Followers'), ('FRIENDS', 'Friend'), ('PUBLIC', 'Public')], default='PUBLIC', max_length=20)),
                ('unlisted', models.BooleanField(default='False')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='service.author')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.CharField(default='', max_length=255)),
                ('summary', models.CharField(default='', max_length=255)),
                ('object_id', models.UUIDField(null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='service.author')),
                ('content_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'likes',
            },
        ),
        migrations.CreateModel(
            name='Liked',
            fields=[
                ('id', models.URLField(max_length=255, primary_key=True, serialize=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked', to='service.author', unique=True)),
                ('items', models.ManyToManyField(blank=True, related_name='liked', to='service.likes')),
            ],
            options={
                'verbose_name_plural': 'liked',
            },
        ),
        migrations.CreateModel(
            name='ImagePosts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image', to='service.post')),
            ],
            options={
                'verbose_name_plural': 'images',
            },
        ),
        migrations.CreateModel(
            name='FollowRequest',
            fields=[
                ('id', models.URLField(max_length=255, primary_key=True, serialize=False)),
                ('summary', models.CharField(max_length=255)),
                ('actor', models.ForeignKey(default=1, max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to='service.author')),
                ('object', models.ForeignKey(default=1, max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to='service.author')),
            ],
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.URLField(max_length=255, primary_key=True, serialize=False)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='service.author')),
                ('items', models.ManyToManyField(blank=True, related_name='followeritem', to='service.author')),
            ],
            options={
                'verbose_name_plural': 'following',
            },
        ),
        migrations.CreateModel(
            name='Followers',
            fields=[
                ('id', models.URLField(max_length=255, primary_key=True, serialize=False)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='service.author', unique=True)),
                ('items', models.ManyToManyField(blank=True, related_name='followingitem', to='service.author')),
            ],
            options={
                'verbose_name_plural': 'followers',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('comment', models.TextField(default='', max_length=255)),
                ('contentType', models.CharField(max_length=20)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('numLikes', models.IntegerField(blank=True, default=0)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='service.author')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='service.post')),
            ],
        ),
    ]
